<?xml version="1.0" encoding="utf-8"?>
<!-- This file contains a set of configuration settings for the custom build
     components found in SandcastleBuilder.Components.dll.  The Sandcastle
     Help File Builder will use this information to merge them with the
     configuration file at build time and also to allow users to configure
     them interactively from within the GUI.  The order of the components in
     this file is not relevant. The Sandcastle Help File Builder supports
     several replacement tags that can be specified in place of such things
     as the components folder, the project folder, etc. These will be replaced
     before use with the physical path associated with the project. -->
<components>
    <!-- The component element defines the ID, the type, and the assembly in
         which the build component can be found.  Normally, the assembly will
         be in the same folder as the configuration file which can be specified
         by using "{@ComponentsFolder}" in the path but this one is part of
         the help file builder and makes use of the colorizer assembly so it
         uses "{@SHFBFolder}" instead. -->
    <component id="Code Block Component"
      type="SandcastleBuilder.Components.CodeBlockComponent"
      assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
        <!-- A brief description of the build component -->
        <description>This build component is used to search for &lt;code&gt; XML comment tags and colorize the code within them.  It can also include code from an external file or a region within the file.</description>

        <!-- A list of build components on which this component depends.  If
             the indicated component does not exist in the project settings or
             in the configuration file already, it will be added automatically
             with its default configuration.  This element can be omitted if
             there are no dependencies. -->
        <dependencies>
            <component id="Post-transform Component" />
        </dependencies>

        <!-- This defines where the component configuration is inserted.  The
             "placement" attribute defines whether it is inserted before or
             after the indicated component.  The placement attribute can also
             be set to "start" or "end" to insert the component at the start
             of the configuration file or at the end.  In those cases, the
             other attributes can be omitted.  If set to "replace", it will
             replace the indicated component (a different one identified by
             the ID or type attribute).  The "id", "type", and "instance"
             attributes identify the build component for the "before",
             "after", and "replace" options.  Use "id" for other custom build
             components with an ID attribute.  Use "type" to identify a stock
             build component by type name.  The "instance" attribute specifies
             an optional number that can be used to indicate the instance of
             the identified component is affected if more than one copy
             appears in the configuration file. -->
        <insert placement="before" type="Microsoft.Ddue.Tools.TransformComponent" />

        <!-- If it has one, this defines the name of the static method within
             the component that can be called to edit the configuration
             interactively.  It should accept a string as a parameter that
             contains the current component configuration and should return a
             string containing the edited component configuration.  If the
             build component does not contain a configure method, this element
             can be omitted and a default editor will be used.  Specify an
             empty string if the component contains no editable configuration
             information.-->
        <configureMethod name="ConfigureComponent" />

        <!-- This should contain the default configuration for the build
             component. -->
        <defaultConfiguration>
            <!-- Base path for relative filenames in source attributes
                 (optional) -->
            <basePath value="{@ProjectFolder}" />

            <!-- Connect to language filter (optional).  If omitted,
                 language filtering is enabled by default. -->
            <languageFilter value="true" />

            <!-- Code colorizer options (required).
                 Attributes:
                    Language syntax configuration file (required)
                    XSLT style file (required)
                    "Copy" image file URL (required)
                    Default language (optional)
                    Enable line numbering (optional)
                    Enable outlining (optional)
                    Tab size override (optional, 0 = Use syntax file setting)
                    Use language name as default title (optional) -->
            <colorizer syntaxFile="{@SHFBFolder}Colorizer\highlight.xml"
                styleFile="{@SHFBFolder}Colorizer\highlight.xsl"
                copyImageUrl="../icons/CopyCode.gif"
                language="cs" numberLines="false" outlining="false"
                tabSize="0" defaultTitle="true" />
        </defaultConfiguration>
    </component>

    <!-- ****************************************************************** -->

    <component id="Version Information Component"
      type="SandcastleBuilder.Components.VersionInfoComponent"
      assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
        <description>This build component is used to obtain version information for each topic so that it can be placed in the footer by the Post-transform Component.</description>

        <insert placement="before" type="Microsoft.Ddue.Tools.TransformComponent" />

        <dependencies>
            <component id="Post-transform Component" />
        </dependencies>

        <!-- To prevent a component from showing up in the list of selectable
             components add a "hidden" element like this.  This is useful for
             preventing edits to components that already appear in the
             configuration file that you do not want to allow to be edited. -->
        <hidden />

        <!-- Not editable at all -->
        <configureMethod name="-" />

        <defaultConfiguration>
            <!-- Reflection information file for version info (required) -->
            <reflectionFile filename="reflection.xml" />
        </defaultConfiguration>
    </component>

    <!-- ****************************************************************** -->

    <component id="Post-transform Component"
      type="SandcastleBuilder.Components.PostTransformComponent"
      assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
        <description>This build component is a companion to the Code Block Component and Version Information Component.  With those, or used by itself, it can also insert a logo image into the header of each API topic.</description>

        <insert placement="after" type="Microsoft.Ddue.Tools.TransformComponent" />

        <configureMethod name="ConfigureComponent" />

        <defaultConfiguration>
            <!-- Code colorizer files (required).
                 Attributes:
                    Stylesheet file (required)
                    Script file (required)
                    "Copy" image file (required) -->
            <colorizer stylesheet="{@SHFBFolder}Colorizer\highlight.css"
                scriptFile="{@SHFBFolder}Colorizer\highlight.js"
                copyImage="{@SHFBFolder}Colorizer\CopyCode.gif" />

            <!-- Base output path for the files (required).  This should match
                 the parent folder of the output path of the HTML files (see
                 SaveComponent). -->
            <outputPath value="Output\" />

            <!-- Logo image file (optional).  Filename is required. The height,
                 width, altText, placement, and alignment attributes are
                 optional. -->
            <logoFile filename="" height="0" width="0" altText=""
                placement="left" alignment="left" />
        </defaultConfiguration>
    </component>

    <!-- ****************************************************************** -->

    <component id="Show Missing Documentation Component"
      type="SandcastleBuilder.Components.ShowMissingComponent"
      assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
        <description>This build component is used to add "missing" notes for missing summary, parameter, returns, value, and remarks tags.  It can also add default summary documentation for constructors.</description>

        <insert placement="before" type="Microsoft.Ddue.Tools.TransformComponent" />

        <!-- The help file builder project contains properties for this
             component so we won't show it. -->
        <hidden />

        <defaultConfiguration>
            <!-- All elements are optional. -->
            <!-- Auto-document constructors (true by default) -->
            <AutoDocumentConstructors value="{@AutoDocumentConstructors}" />

            <!-- Show missing param tags (true by default) -->
            <ShowMissingParams value="{@ShowMissingParams}" />

            <!-- Show missing remarks tags (false by default) -->
            <ShowMissingRemarks value="{@ShowMissingRemarks}" />

            <!-- Show missing returns tags (true by default) -->
            <ShowMissingReturns value="{@ShowMissingReturns}" />

            <!-- Show missing summary tags (true by default) -->
            <ShowMissingSummaries value="{@ShowMissingSummaries}" />

            <!-- Show missing value tags (false by default) -->
            <ShowMissingValues value="{@ShowMissingValues}" />

            <!-- Show missing namespace comments (true by default) -->
            <ShowMissingNamespaces value="{@ShowMissingNamespaces}" />
        </defaultConfiguration>
    </component>

    <!-- ****************************************************************** -->

    <component id="IntelliSense Component"
      type="SandcastleBuilder.Components.IntelliSenseComponent"
      assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
        <description>This build component is used to extract the XML comments into files that can be used for IntelliSense.  Only the basic set of tags needed for IntelliSense are exported and only for documented API members.</description>

        <!-- It's more useful when used with the Show Missing component but
             it can be used by itself (see the insert element below). -->
        <dependencies>
            <component id="Show Missing Documentation Component" />
        </dependencies>

        <!-- If not using the Show Missing component, this can be used instead -->
        <!-- insert placement="before" type="Microsoft.Ddue.Tools.TransformComponent" / -->

        <insert placement="after" id="Show Missing Documentation Component" />

        <configureMethod name="ConfigureComponent" />

        <defaultConfiguration>
            <!-- Output options (optional)
                 Attributes:
                    Include Namespaces (false by default)
                    Namespaces filename ("Namespaces" if not specified or empty)
                    Directory (current folder if not specified or empty) -->
            <output includeNamespaces="false" namespacesFile="Namespaces"
                folder="{@OutputFolder}" />
        </defaultConfiguration>
    </component>
</components>
